Je te déconseille de utiliser MySQL pour ce genre de tache.
Premièrement, si tout le monde commence à faire ça et un jour je devrais faire de la maintenance sur les serveurs, ça va être un bordel infini. Donc, sauf si ce n'est pas vraiment indispensable, je préfère que MySQL ne soit pas utilisé pour cela.
Je te conseille plutôt de créer  un dossier pour chaque job. Le dossier stockera les fichiers avec les donnés. Tu peux créer un fichier json ou tout simplement un fichier dans le quel chaque champs est séparé par un caractère standard (exemple \t ou ,).  Si tu utilise cette approche ça va te faciliter la vie pour le debug car si quelque chose ne marche pas dans un job, tu vas directement dans son répertoire et tout est là.
Deuxièmement, comme les serveurs n'ont pas de la place infinie, à moment donnée il faudra éliminer des données. Si tu mets tout dans un répertoire, un simple rm suffira pour libérer la place sans devoir faire du sql. Par rapport à ça, je t'anticipe aussi que pour libérer la place occupée par tes jobs, je vais te demander d'écrire aussi un petit script qui élimine le job plus vieux de une certaine période, normalement deux mois. Donc, quand un job démarre, pense à mettre d'une maniéré ou l'autre la date de démarrage.  Je te dis ça car on peut pas faire confiance à la date montré par "ls" car cette dernière c'est la dernière date d'accès au fichiers.

Si pour une raison quelconque tu veux utiliser de l'SQL, je te conseille de utilise sqlite. Il s'agit d'un DBMS plus simple de MySQL. sqlite a l’avantage de créer un fichier pour chaque base de donnés. Donc, tu peux créer une base de donné dans le dossier de chaque job en ayant le meilleur des deux mondes. Mais à nouveau, je te conseille l'approche du ficher simple car je ne crois pas que tu as une grosse base de données à traiter.
